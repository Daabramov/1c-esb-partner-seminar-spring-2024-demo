// @strict-types

#Область ПрограммныйИнтерфейс

// Создать новую заявку.
//
// Параметры:
//  ПараметрыСоздания - см. КурьеркиеЗаявки.НовыйДанныеСозданияЗаявки
//
// Возвращаемое значение:
//	ДокументСсылка.КурьерскаяЗаявка
Функция СоздатьНовуюКурьерскуюЗаявку(ПараметрыСоздания) Экспорт

	НачатьТранзакцию();
	Попытка
		НоваяЗаявка = Документы.КурьерскаяЗаявка.СоздатьДокумент();
		НоваяЗаявка.Дата = ТекущаяДатаСеанса();
		НоваяЗаявка.Автор = ПараметрыСоздания.Автор;
		НоваяЗаявка.Адрес = ПараметрыСоздания.Адрес;
		НоваяЗаявка.Комментарий = ПараметрыСоздания.Комментарий;
		НоваяЗаявка.ДополнительныеСвойства.Вставить("Статус", Перечисления.СтатусыКурьерскихЗаявок.Создана);

		Если Не НоваяЗаявка.ПроверитьЗаполнение() Тогда
			ВызватьИсключение "Проверка заполнения выполнена с замечаниями.";
		КонецЕсли;
		НоваяЗаявка.Записать();

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;

	Возврат НоваяЗаявка.Ссылка;

КонецФункции

// Новый данные создания заявки.
//
// Возвращаемое значение:
//  Структура - Новый данные создания курьерской заявки:
// * Автор - СправочникСсылка.Клиенты -
// * Адрес - Строка -
// * Комментарий - Строка -
Функция НовыйДанныеСозданияЗаявки() Экспорт
	Результат = Новый Структура();
	Результат.Вставить("Автор", Справочники.Клиенты.ПустаяСсылка());
	Результат.Вставить("Адрес", "");
	Результат.Вставить("Комментарий", "");
	Возврат Результат;
КонецФункции

#КонецОбласти